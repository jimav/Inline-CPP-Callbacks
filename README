INTRODUCTION:

Inline::CPP::Callbacks -- Write C++ class methods in Perl.

Inline::CPP lets you write Perl subroutines and classes in C++.
This is an extension which lets you write methods of C++ classes in Perl.

This works by "filtering" your C++ source to insert proxy implementations
of the methods which you want forwarded back to Perl.   This is
indicated by coding a quasi "macro" as the method implementation.
A related "macro" generates entire method definitions for all
otherwise-unimplemented abstract methods in any base class.

Currently*, this tool is invoked using the standard user-defined-filter 
mechanism provided by Inline & Inline::CPP.  For example:

   use Inline::CPP::Callbacks 'get_callback_filter';
   use Inline CPP => <<'CPPEND' FILTERS => [get_callback_filter()] ;

        class MyClass {
          public:
            void methodA() { ... } /* implemented here in C++ */
            void methodB(int a) { FILTER_CALLPERL } /* forward to Perl */
        }

        class Abstract {
          public:
            void dispatch(int n, int arg) {
              switch (n) {
                case 0: method0(arg); break;
                case 1: method1(arg); break;
                case 2: method2(arg); break;
                case 3: method3(arg); break;
                default: throw("invalid dispatch arg");
              }
            }
            virtual int    method0(int) = 0;
            virtual double method1(int) = 0;
            virtual void   method2(int) = 0;
            virtual void   method3(int) = 0;
        };
        class Derived : public Abstract {
            /* A pure-virtual implemented normally in C++ */
            virtual int method0(int arg) { return 12345; }

            /* Auto-generate implementations of all other pure virtuals */
            FILTER_IMPL_PUREVIRTS
        };
        CPPEND

        my $obj = Derived->new;
        $obj->set_perl_object($obj);

        $obj->dispatch(2, 42);

        exit;

        package MyClass;

        sub perl_methodB { ... }

        package Derived;

        sub perl_method1 { ... }
        sub perl_method2 { ... }
        sub perl_method3 { ... }

*This is an EXPERIMENTAL proof-of-concept which parses the C++ code 
using a modified copy of the parser used by Inline::CPP.  
In the future it may be possible to share the same
parser, possibly with a different user API.

-----------------------------------------------------------------------------
INSTALLATION:

perl Makefile.PL
make
make test
make install

-----------------------------------------------------------------------------
INFORMATION:

- For more information about this module see 'perldoc Inline::CPP::Callbacks'.
- For more information on Inline::CPP see 'perldoc Inline::CPP'.

Copyright (c) 2019 Jim Avera. All Rights Reserved.
